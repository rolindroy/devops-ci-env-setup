---

- hosts: localhost
  gather_facts: no
  tasks:
    - add_host:
        name: "{{ target_host }}"
        groups: dynamically_created_hosts

- name: DevOps QA Env-Setup
  hosts: dynamically_created_hosts
  sudo: True
  # pre_tasks:
  #   - name: Installing repo for Java Open JDK 8.
  #     apt_repository: repo='ppa:openjdk-r/ppa'
  #
  #   - name: Updating apt-cache for Java Open JDK 8.
  #     apt: update_cache=yes
  #
  #   - name: Installing Curl and wget
  #     apt: pkg={{ item }} state=latest
  #     with_items:
  #       - curl
  #       - wget
  #       - zip
  #       - unzip
  #       - git
  # roles:
  #   - role: java
  #     when: "ansible_os_family == 'Debian'"
  #     java_packages:
  #       - openjdk-8-jdk
  #
  #   - role: mysql
  #   - role: maven
  #   - role: sonar

  tasks:
    # - name: Install Docker
    #   apt: pkg={{ item }} state=latest
    #   with_items:
    #     - docker
    #     - docker.io
    #   ignore_errors: True
    #
    # - name: Update docker service to run without sudo
    #   user: name={{ item }} groups=docker append=yes
    #   sudo: true
    #   with_items:
    #     - "{{ ubuntu_user }}"
    #   register: docker_group
    #
    # - name: Kill open ssh sessions
    #   shell: "ps -ef | grep sshd | grep jenkins | awk '{print \"kill -9\", $2}' | sh"
    #   when: docker_group | changed
    #   failed_when: false
    #
    # - name: Updating apt-cache
    #   apt: update_cache=yes
    #
    # - name: Create Slave directory
    #   file:
    #     path: "/home/{{ ubuntu_user }}/jenkins-slave"
    #     state: directory
    #     owner: "{{ ubuntu_user }}"
    #     group: "{{ ubuntu_user }}"
    #     mode: 0775

    # - name: Install pip, python-dev package with apt
    #   apt:
    #     pkg: "{{ item }}"
    #     state: latest
    #     update_cache: yes
    #   with_items:
    #     - python-dev
    #     - python-pip
    #
    # - name: Upgrade latest pip, setuptools, docker-py and docker-compose with pip
    #   pip:
    #     name: "{{ item.name }}"
    #     state: latest
    #   with_items:
    #     - { name: pip, version: latest, install: true }
    #     - { name: setuptools, version: latest, install: true }
    #     - { name: docker-py==1.9.0, state: forcereinstall }
    #     # - { name: docker-compose, version: latest, install: true }
    #   ignore_errors: yes
    #   register: docker_py_inastall
    #
    # - debug: var=docker_py_inastall verbosity=4
    #
    # - name: Checking out Java project
    #   git: repo=https://github.com/rolindroy/devops-ci-deployment.git/
    #        dest="/home/{{ ubuntu_user }}/jenkins-slave"

    - name: Running Maven build
      shell: mvn clean compile package  chdir="/home/{{ ubuntu_user }}/jenkins-slave/CounterWebApp"
      register: build_success

    - debug: var=build_success.stdout_lines

    - name: Copy artifact file to current location
      command: mv "/home/{{ ubuntu_user }}/jenkins-slave/CounterWebApp/target/CounterWebApp.war" "/home/{{ ubuntu_user }}/jenkins-slave/CounterWebApp.war"
      register: copy_artifact
      when: build_success.changed

    - name: pull an image
      docker_image:
        name: ubuntu:12.04

    - name: Build docker image
      command: docker build -t devops_bootstrap/counterapp . chdir="/home/{{ ubuntu_user }}/jenkins-slave"
      when: copy_artifact.changed
